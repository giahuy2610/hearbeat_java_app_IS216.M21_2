/*
TAKE NOTE: MUST SET NAME WITH FORMAT
*/
--Create table
----Create table User
CREATE TABLE TB_USER
(
    USERID INTEGER PRIMARY KEY,
    FIRSTNAME NVARCHAR2(40) NOT NULL,
    LASTNAME NVARCHAR2(40) NOT NULL,
    GENDER INTEGER NOT NULL,
    PHONE CHAR(10) NOT NULL UNIQUE,
    DATEOFBIRTH DATE NOT NULL,
    EMAIL VARCHAR2(255) UNIQUE,
    SCORE INTEGER NOT NULL,
    AVATAR VARCHAR2(255),
    CREATEDON DATE NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    ROLEID INTEGER NOT NULL,
    ISDELETED INTEGER NOT NULL,
);

----Create table Post
CREATE TABLE TB_POST
(
    POSTID INTEGER PRIMARY KEY,
    OWNERID INTEGER NOT NULL,
    PARTNERID INTEGER,
    STATUSID INTEGER NOT NULL,
    TITLE NVARCHAR2(255) NOT NULL,
    CONTENT NVARCHAR2(255) NOT NULL,
    CATEGORYID INTEGER NOT NULL,
    IMAGEPATH VARCHAR2(255),
    CREATEDON DATE NOT NULL,
    UPDATEDON DATE,
    PURPOSEID INTEGER NOT NULL,
    ISDELETED INTEGER NOT NULL,
);

----Create table Category
CREATE TABLE TB_CATEGORY
(
    CATEGORYID INTEGER PRIMARY KEY,
    CATEGORYNAME NVARCHAR2(255) NOT NULL
)

----Create table Purpose
CREATE TABLE TB_PURPOSE
(
    PURPOSEID INTEGER PRIMARY KEY,
    PURPOSENAME NVARCHAR2(255) NOT NULL
);

----Create table Role
CREATE TABLE TB_ROLE
(
    ROLEID INTEGER PRIMARY KEY,
    ROLENAME NVARCHAR2(255) NOT NULL
);

----Create table ScoreTransaction
CREATE TABLE TB_SCORETRANSACTION
(
    SCORETRANSACTIONID INTEGER PRIMARY KEY,
    USERID INTEGER NOT NULL,
    CURRENTSCORE INTEGER NOT NULL,
    POSTID INTEGER NOT NULL
);

----Create table PostStatus
CREATE TABLE TB_POSTSTATUS
(
    STATUSID INTEGER PRIMARY KEY,
    STATUSNAME NVARCHAR2(255) NOT NULL
);

----Create table Address
CREATE TABLE TB_ADDRESS
(
    USERID INTEGER PRIMARY KEY,
    CITY NVARCHAR2(255) NOT NULL,
    DISTRICT NVARCHAR2(255) NOT NULL,
    WARD NVARCHAR2(255) NOT NULL,
    ADDRESS NVARCHAR2(255) NOT NULL
);

/*
CREATE AUTO INCREMENT FOR PRIMARY KEY
*/
--create sequence
CREATE SEQUENCE AUTO_INCREMENT_SEQUENCE
START WITH 1
INCREMENT BY 1;

--FORMAT NAME FOR SEQUENCE: TRIGGER_AUTOINCRE_name table_name attribute
--table user
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_USER_USERID
BEFORE INSERT ON
TB_USER
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.USERID
    FROM DUAL;
END;
--table post
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_POST_POSTID
BEFORE INSERT ON
TB_POST
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.POSTID
    FROM DUAL;
END;
--table category
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_CATEGORY_CATEGORYID
BEFORE INSERT ON
TB_CATEGORY
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.CATEGORYID
    FROM DUAL;
END;
--table purpose
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_PURPOSE_PURPOSEID
BEFORE INSERT ON
TB_PURPOSE
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.PURPOSEID
    FROM DUAL;
END;
--table role
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_ROLE_ROLEID
BEFORE INSERT ON
TB_ROLE
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.ROLEID
    FROM DUAL;
END;
--table scoretransaction 
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_SCORETRANSACTION_SCORETRANSACTIONID
BEFORE INSERT ON
TB_SCORETRANSACTION
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.SCORETRANSACTIONID
    FROM DUAL;
END;
--table poststatus
CREATE OR REPLACE TRIGGER TRIGGER_AUTOINCRE_TB_POSTSTATUS_STATUSID
BEFORE INSERT ON
TB_POSTSTATUS
REFERENCING NEW AS NEW
    FOR EACH ROW BEGIN SELECT
    AUTO_INCREMENT_SEQUENCE.NEXTVAL INTO :NEW.STATUSID
    FROM DUAL;
END;
/*
CREATE FOREIGN KEY
*/
--FOREIGN KEY OF TABLE JV_USER
alter table TB_USER 
add constraint FK_USER_ROLE foreign key (RoleId)
references TB_ROLE(Roleid);

--FOREIGN KEY OF TABLE TB_POST
alter table TB_POST 
add constraint FK_POST_USER1 foreign key (OwnerId)
references TB_USER(UserId);

alter table TB_POST 
add constraint FK_POST_USER2 foreign key (PartnerID)
references TB_USER(UserId);

alter table TB_POST 
add constraint FK_POST_STATUS foreign key (StatusId)
references TB_PostStatus(StatusId);

alter table TB_POST 
add constraint FK_POST_CATEGORY foreign key (CategoryId)
references TB_CATEGORY(CategoryId);

alter table TB_POST 
add constraint FK_POST_PURPOSE foreign key (PurposeId)
references TB_PURPOSE(PurposeId);

--FOREIGN KEY OF TABLE TB_ScoreTransaction
alter table TB_ScoreTransaction 
add constraint FK_STRAN_USER foreign key (UserId)
references TB_USER(UserId);

alter table TB_ScoreTransaction 
add constraint FK_STRAN_POST foreign key (PostId)
references TB_POST(PostId);

--FOREIGN KEY OF TABLE TB_ADDRESS
alter table TB_ADDRESS 
add constraint FK_ADDR_USER foreign key (UserId)
references TB_USER(UserId);

/*
DEMO INSERT INTO DATABASE
*/